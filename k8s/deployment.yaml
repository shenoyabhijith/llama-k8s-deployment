# LLAMA 3.2 3B Model Deployment Configuration
# This deployment manages the LLAMA model inference service with GPU acceleration,
# auto-scaling capabilities, and robust health monitoring.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: llama-deployment
  namespace: llama-deployment
  labels:
    app: llama-server
    component: inference
    version: "3.2"
spec:
  replicas: 2  # Base replica count, scaled by HPA
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: llama-server
  template:
    metadata:
      labels:
        app: llama-server
        component: inference
        version: "3.2"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: llama-container
        image: your-registry/llama-inference:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        
        # Environment configuration
        envFrom:
        - configMapRef:
            name: llama-config
        - secretRef:
            name: llama-secrets
        
        # Resource allocation
        resources:
          requests:
            memory: "8Gi"
            cpu: "2"
            nvidia.com/gpu: "1"
          limits:
            memory: "16Gi"
            cpu: "4"
            nvidia.com/gpu: "1"
        
        # Model cache persistence
        volumeMounts:
        - name: model-cache
          mountPath: /root/.cache/huggingface
          readOnly: false
        
        # Health monitoring
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
      
      # Persistent storage
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: llama-model-cache
      
      # GPU node selection
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-tesla-t4  # Adjust for your cloud provider
      
      # GPU tolerations
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
      
      # Security policies
      securityContext:
        fsGroup: 1000
      serviceAccountName: llama-service-account